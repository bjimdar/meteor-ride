# Notes:
#   - Minimal appveyor.yml file is an empty file. All sections are optional.
#   - Indent each level of configuration with 2 spaces. Do not use tabs!
#   - All section names are case-sensitive.
#   - Section names should be unique on each level.
#   - See http://www.appveyor.com/docs/appveyor-yml for reference

#---------------------------------#
#      general configuration      #
#---------------------------------#

# version format
version: 1.0.{build}

# Do not build on tags (GitHub only)
skip_tags: true

# Operating system (build VM template)
os: Windows Server 2014


# this is how to allow failing jobs in the matrix
matrix:
  fast_finish: false     # set this flag to immediately finish build once one of the jobs fails.
  allow_failures:
    - platform: x86
      configuration: Debug
    - platform: x64
      configuration: Release

# enable patching of AssemblyInfo.* files
assembly_info:
  patch: true
  file: AssemblyInfo.*
  assembly_version: "2.2.{build}"
  assembly_file_version: "{version}"
  assembly_informational_version: "{version}"


#---------------------------------#
#       build configuration       #
#---------------------------------#

# build platform, i.e. x86, x64, Any CPU. This setting is optional.
platform: Any CPU

# to add several platforms to build matrix:
#platform:
#  - x86
#  - Any CPU

# build Configuration, i.e. Debug, Release, etc.
configuration: Release

# to add several configurations to build matrix:
#configuration:
#  - Debug
#  - Release

build:
  parallel: true                  # enable MSBuild parallel builds
  project: meteor-ride.sln        # path to Visual Studio solution or project

# to disable automatic builds
#build: off

#---------------------------------#
#       tests configuration       #
#---------------------------------#

test:
  assemblies:
    - asm1.dll
    - asm2.dll

  categories:
    - UI
    - E2E



#---------------------------------#
#      artifacts configuration    #
#---------------------------------#

artifacts:

  # pushing a single file
  - path: test.zip

  # pushing a single file with environment variable in path and "Deployment name" specified
  - path: MyProject\bin\$(configuration)
    name: myapp

  # pushing entire folder as a zip archive
  - path: logs

  # pushing all *.nupkg files in directory
  - path: out\*.nupkg


#---------------------------------#
#     deployment configuration    #
#---------------------------------#

# providers: Local, FTP, WebDeploy, AzureCS, AzureBlob, S3, NuGet, Environment
# provider names are case-sensitive!
deploy:

    # FTP deployment provider settings
  - provider: FTP
    protocol: ftps
    host: ftp.myserver.com
    username: admin
    password:
      secure: eYKZKFkkEvFYWX6NfjZIVw==
    folder:
    application:
    active_mode: false

    # Amazon S3 deployment provider settings
  - provider: S3
    access_key_id:
      secure: ABcd==
    secret_access_key:
      secure: ABcd==
    bucket: my_bucket
    folder:
    artifact:
    set_public: false

    # Azure Blob storage deployment provider settings
  - provider: AzureBlob
    storage_account_name:
      secure: ABcd==
    storage_access_key:
      secure: ABcd==
    container: my_container
    folder:
    artifact:

    # Web Deploy deployment provider settings
  - provider: WebDeploy
    server: http://www.deploy.com/myendpoint
    website: mywebsite
    username: user
    password:
      secure: eYKZKFkkEvFYWX6NfjZIVw==
    ntlm: false
    remove_files: false
    app_offline: false
    skip_dirs: \\App_Data
    skip_files: web.config
    on:
      branch: release
      platform: x86
      configuration: debug

    # Deploying to Azure Cloud Service
  - provider: AzureCS
    subscription_id:
      secure: fjZIVw==
    subscription_certificate:
      secure: eYKZKFkkEv...FYWX6NfjZIVw==
    storage_account_name: my_storage
    storage_access_key:
      secure: ABcd==
    service: my_service
    slot: Production
    target_profile: Cloud
    artifact: MyPackage.cspkg

    # Deploying to NuGet feed
  - provider: NuGet
    server: https://my.nuget.server/feed
    api_key:
      secure: FYWX6NfjZIVw==
    skip_symbols: false
    symbol_server: https://your.symbol.server/feed
    artifact: MyPackage.nupkg

    # Deploy to GitHub Releases
  - provider: GitHub
    artifact: /.*\.nupkg/           # upload all NuGet packages to release assets
    draft: false
    prerelease: false
    on:
      branch: master                # release from master branch only
      appveyor_repo_tag: true       # deploy on tag push only

    # Deploying to a named environment
  - provider: Environment
    name: staging
    on:
      branch: staging
      env_var1: value1
      env_var2: value2

# scripts to run before deployment
before_deploy:

# scripts to run after deployment
after_deploy:

# to run your custom scripts instead of provider deployments
deploy_script:

# to disable deployment
#deploy: off

#---------------------------------#
#        global handlers          #
#---------------------------------#

# on successful build
on_success:
  - do something

# on build failure
on_failure:
  - do something

# after build failure or success
on_finish:
  - do something

  
#---------------------------------#
#         notifications           #
#---------------------------------#
  
notifications:

  # Email
  - provider: Email
    to:
      - user1@email.com
      - user2@email.com
    subject: 'Build {{status}}'                  # optional
    message: "{{message}}, {{commitId}}, ..."    # optional
    on_build_status_changed: true

  # HipChat
  - provider: HipChat
    auth_token:
      secure: RbOnSMSFKYzxzFRrxM1+XA==
    room: ProjectA
    template: "{message}, {commitId}, ..."

  # Slack
  - provider: Slack
    auth_token:
      secure: kBl9BlxvRMr9liHmnBs14A==
    channel: development
    template: "{message}, {commitId}, ..."
    
  # Campfire
  - provider: Campfire
    account: appveyor
    auth_token:
      secure: RifLRG8Vfyol+sNhj9u2JA==
    room: ProjectA
    template: "{message}, {commitId}, ..."

  # Webhook
  - provider: Webhook
    url: http://www.myhook2.com
    headers:
      User-Agent: myapp 1.0
      Authorization:
        secure: GhD+5xhLz/tkYY6AO3fcfQ==
    on_build_success: false
    on_build_failure: true
    on_build_status_changed: true
